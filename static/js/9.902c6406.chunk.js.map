{"version":3,"sources":["files/casting.mp4","UI/components/circular-rogressbar/circular-progressbar.js","components/casting/Casting-page.js"],"names":["CircularProgressbar","days","hours","t","useTranslation","className","CastingPage","done","setDone","useState","daysToEnd","setDaysToEnd","hoursToEnd","setHoursToEnd","setAlreadyRegistered","request","useHttp","useEffect","smoothJumpUp","now","moment","end","durationDaysToEnd","duration","diff","asDays","asHours","Math","round","then","res","style","marginTop","Done","VideoJs","title","videoURL","VideoCasting","image","textAlign"],"mappings":"sPAAe,MAA0B,oC,QCwB1BA,G,OApBa,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACzBC,EAAMC,cAAND,EACR,OACI,sBAAKE,UAAU,gBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,sBAAMA,UAAU,kBAAhB,SACKJ,IAEL,+BAAOE,EAAE,aAEb,sBAAKE,UAAU,gBAAf,UACI,sBAAMA,UAAU,kBAAhB,SACKH,IAEL,+BAAOC,EAAE,mB,OCwDVG,UA7DK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EACLC,mBAAS,GADJ,mBAChCC,EADgC,KACrBC,EADqB,OAEHF,mBAAS,GAFN,mBAEhCG,EAFgC,KAEpBC,EAFoB,OAIWJ,mBAAS,GAJpB,mBAIbK,GAJa,WAO/BC,GADMX,cAAND,EACYa,cAAZD,SA6BR,OA1BAE,qBAAU,WACNC,cACA,IAAMC,EAAMC,MACNC,EAAMD,IAAO,cACbE,EAAoBF,IAAOG,SAASF,EAAIG,KAAKL,IAC7CT,EAAYY,EAAkBG,SAC9Bb,EAAaU,EAAkBI,UACrCf,EAAagB,KAAKC,MAAMlB,IACxBG,EAAcc,KAAKC,MAAMhB,GAAc,IAevCG,EAAQ,2BAA2Bc,MAAK,SAAAC,GAAG,OAAIhB,EAAqBgB,QACrE,IAGC,qBAAKC,MAAO,CAAEC,UAAW,QAAzB,SACKzB,EACK,cAAC0B,EAAA,EAAD,IACA,qCACE,cAACC,EAAA,EAAD,CACIC,MAAM,eACNC,SAAUC,EAEVC,MArCE,yDAuCN,qBAAKP,MAAO,CAAEQ,UAAW,UAAzB,SAGI,cAAC,EAAD,CAAqBtC,KAAMS,EAAWR,MAAOU,MAEjD,sBAAKP,UAAU,mBAAf,UACI,cAAC,IAAD,IACA,cAAC,IAAD,CAAaG,QAASA","file":"static/js/9.902c6406.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/casting.e5627946.mp4\";","import React from 'react'\r\nimport { useTranslation } from 'react-i18next';\r\nimport './circular-progressbar.scss'\r\n\r\nconst CircularProgressbar = ({ days, hours }) => {\r\n    const { t } = useTranslation()\r\n    return (\r\n        <div className=\"circular_flex\">\r\n            <div className=\"circular_item\">\r\n                <span className=\"circular_circle\">\r\n                    {days}\r\n                </span>\r\n                <span>{t('days')}</span>\r\n            </div>\r\n            <div className=\"circular_item\">\r\n                <span className=\"circular_circle\">\r\n                    {hours}\r\n                </span>\r\n                <span>{t('hours')}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CircularProgressbar","import React, { useEffect, useState } from 'react'\r\nimport moment from \"moment\";\r\nimport CastingInfo from \"../../UI/components/more-info-casting/more-info.casting\";\r\nimport CastingForm from \"../../UI/components/casting-form/casting-form\";\r\nimport DonePage from '../done/Done';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useHttp } from '../../hooks/hook.http';\r\nimport { smoothJumpUp } from '../../utils/scroll-utils';\r\nimport VideoCasting from '../../files/casting.mp4';\r\nimport VideoJs from '../home/video/VideoJs';\r\nimport CircularProgressbar from '../../UI/components/circular-rogressbar/circular-progressbar';\r\nimport './Casting-page.scss'\r\n\r\nconst CastingPage = ({ done, setDone }) => {\r\n    const [daysToEnd, setDaysToEnd] = useState(0)\r\n    const [hoursToEnd, setHoursToEnd] = useState(0)\r\n\r\n    const [alreadyRegistered, setAlreadyRegistered] = useState(0)\r\n\r\n    const { t } = useTranslation()\r\n    const { request } = useHttp()\r\n    const CastingPoster = 'https://lbefree.com/storage/casting/castingImage.jpg';\r\n\r\n    useEffect(() => {\r\n        smoothJumpUp()\r\n        const now = moment();\r\n        const end = moment(\"2021-04-20\");\r\n        const durationDaysToEnd = moment.duration(end.diff(now));\r\n        const daysToEnd = durationDaysToEnd.asDays();\r\n        const hoursToEnd = durationDaysToEnd.asHours();\r\n        setDaysToEnd(Math.round(daysToEnd));\r\n        setHoursToEnd(Math.round(hoursToEnd) % 24);\r\n\r\n\r\n        // axios.get('/api/casting/counts/all', {\r\n        //     headers: {\r\n        //         // 'Access-Control-Allow-Headers': 'Content-Type, X-Auth-Token, Origin',\r\n        //         // 'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n        //         // 'Access-Control-Allow-Origin': '*',\r\n        //         // \"Origin\": \"http://localhost:3000\",\r\n        //         // \"Host\": \"https://goal.lbefree.com\",\r\n        //         // \"Origin\": \"http://localhost:3000\",\r\n        //         // \"Access-Control-Allow-Headers\": \"X-Requested-With, privatekey\",\r\n        //         // 'Access-Control-Expose-Headers': 'Origin, X-Requested-With, Content-Type, Accept, x-session-token, timeout, Content-Length, location, *'            \r\n        //     }, withCredentials: true\r\n        // }).then(x => console.log(x))\r\n        request('/api/casting/counts/all').then(res => setAlreadyRegistered(res))\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ marginTop: '50px' }}>\r\n            {done\r\n                ? <DonePage />\r\n                : <>\r\n                    <VideoJs\r\n                        title=\"casting-page\"\r\n                        videoURL={VideoCasting}\r\n                        // videoURL=\"https://lbefree.com/storage/casting/casting.mp4\"\r\n                        image={CastingPoster}\r\n                    />\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        {/*<p className=\"registered_count\"> {alreadyRegistered} </p>*/}\r\n                        {/*<span className=\"registered_title\"> {t('casting.already.registred')} </span>*/}\r\n                        <CircularProgressbar days={daysToEnd} hours={hoursToEnd} />\r\n                    </div>\r\n                    <div className=\"befree-container\">\r\n                        <CastingInfo />\r\n                        <CastingForm setDone={setDone} />\r\n                    </div>\r\n                </>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastingPage;\r\n"],"sourceRoot":""}