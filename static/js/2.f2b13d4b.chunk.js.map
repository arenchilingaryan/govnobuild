{"version":3,"sources":["UI/icons/ArrowDownIcon.js","UI/components/casting-form/Modal.js","UI/components/long-input/Long-input.js","files/castingImage.jpg","files/InstructionVideo.mov","files/ExampleVideo.mov","files/InstructionVideoCover.jpg","files/ExampleVideoCover.jpg","UI/components/more-info-casting/more-info.casting.js","UI/components/casting-form/terms-component.js","UI/components/casting-form/casting-form.js"],"names":["ArrowDownIcon","style","className","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","Modal","show","closeModal","title","children","useState","unmount","setUnmount","useEffect","document","body","overflow","window","addEventListener","event","keyCode","removeEventListener","setTimeout","modalRef","useRef","onClick","e","target","current","ref","type","LongInput","changeHandler","name","placeholder","error","value","tooltip","htmlFor","trim","length","id","onChange","data-tooltip","CastingInfo","isOpenMoreInfo","setIsOpenMoreInfo","modalVideoInstuctionIsOpen","setModalVideoInstuctionIsOpen","exampleVideoIsOpen","setExampleVideoIsOpen","t","useTranslation","toggleVideoInstructionModal","toggleExampleVideoModal","textAlign","marginTop","fontWeight","color","letterSpacing","marginBottom","Button","VideoJs","videoURL","InstructionVideo","image","InstructionVideoCover","ExampleVideo","ExampleVideoCover","to","textTransform","marginLeft","transform","TermsComponent","onToggleTermsModal","termsModalIsOpen","CastingForm","setDone","email","phone","repeat","about","surname","form","setForm","canSend","setCanSend","isAgree","setIsAgree","setTermsModalIsOpen","useHttp","request","loading","useErrors","arrayOfErrors","clearErrors","onSetError","onSetErrorsFromRequest","getErrorFieldByName","video1","video2","sendForm","a","validateEmail","formData","FormData","append","status","resErrors","response","data","errors","map","idx","Input","phoneValue","ln","width","Spinner","disabled"],"mappings":"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","file":"static/js/2.f2b13d4b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './styles.scss';\r\n\r\nconst ArrowDownIcon = ({ style, className = 'arrow-icon' }) => {\r\n    return (\r\n        <svg style={style} aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"chevron-down\"\r\n            className={className} role=\"img\" xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 448 512\">\r\n            <path fill=\"currentColor\"\r\n                d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 \r\n                0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 \r\n                284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 \r\n                22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 \r\n                9.372-24.569 9.372-33.942 0z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default ArrowDownIcon\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport './Modal.scss'\r\n\r\nconst Modal = ({show, closeModal, title, children}) => {\r\n    const [unmount, setUnmount] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            document.body.style.overflow = 'hidden'\r\n            window.addEventListener('keydown', event => {\r\n                if (event.keyCode === 27) {\r\n                    closeModal()\r\n                }\r\n            })\r\n            setUnmount(false)\r\n        }\r\n        if (!show) {\r\n            document.body.style.overflow = 'auto'\r\n            window.removeEventListener('keydown', event => {\r\n                if (event.keyCode === 27) {\r\n                    closeModal()\r\n                }\r\n            })\r\n            setTimeout(() => {\r\n                setUnmount(true)\r\n            }, 300)\r\n        }\r\n    }, [show])\r\n\r\n    const modalRef = useRef()\r\n\r\n    const closeModalFromOverlay = e => {\r\n        if (e.target == modalRef.current) return\r\n        closeModal()\r\n    }\r\n    return (\r\n        <>\r\n            <div\r\n                className={show ? \"overlay overlay-active\" : \"overlay\"}\r\n                onClick={closeModalFromOverlay}\r\n            />\r\n            <div ref={modalRef} className={show ? \"terms_wrapper terms_wrapper-open\" : \"terms_wrapper\"}>\r\n                <div className=\"terms_wrapper-title\">\r\n                    <span className=\"terms_wrapper-title-name\">{title}</span>\r\n                    <i onClick={closeModal} className=\"fas fa-times x-icon\"/>\r\n                </div>\r\n                {!unmount && children}\r\n                <div className=\"terms_footer\">\r\n                    <button className=\"terms_button\" type=\"button\" onClick={closeModal}>Close</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\nimport './Long-input.scss'\r\n\r\nconst LongInput = ({ changeHandler, name, placeholder, error, value, tooltip }) => {\r\n  return (\r\n    <div className=\"field_wrapper\">\r\n      <label htmlFor={`input_${name}`} className={\r\n        value?.trim().length <= 0\r\n          ? \"field_placeholder visible\"\r\n          : \"field_placeholder\"\r\n      }\r\n      >{placeholder}</label>\r\n      <input\r\n        id={`input_${name}`}\r\n        onChange={changeHandler}\r\n        className={error ? \"long-input input-error\" : \"long-input\"}\r\n        name={name}\r\n        type=\"text\"\r\n        value={value}\r\n      />\r\n      {tooltip && <i className=\"far fa-question-circle tooltip\" data-tooltip={tooltip} />}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default LongInput","export default __webpack_public_path__ + \"static/media/castingImage.d52a09fe.jpg\";","export default __webpack_public_path__ + \"static/media/InstructionVideo.ba789cf4.mov\";","export default __webpack_public_path__ + \"static/media/ExampleVideo.053fddb0.mov\";","export default __webpack_public_path__ + \"static/media/InstructionVideoCover.58f11e48.jpg\";","export default __webpack_public_path__ + \"static/media/ExampleVideoCover.3a192c67.jpg\";","import React, { useState } from 'react'\r\nimport { useTranslation } from \"react-i18next\";\r\nimport './more-info-casting.scss'\r\nimport '../../../components/be-free/components/casting/Casting.scss'\r\nimport '../../../components/be-free/Be-free.scss'\r\nimport ArrowDownIcon from '../../icons/ArrowDownIcon';\r\nimport Button from \"../button/Button\";\r\nimport Modal from \"../casting-form/Modal\";\r\nimport VideoJs from \"../../../components/home/video/VideoJs\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport InstructionVideo from '../../../files/InstructionVideo.mov';\r\nimport ExampleVideo from '../../../files/ExampleVideo.mov'\r\nimport InstructionVideoCover from '../../../files/InstructionVideoCover.jpg';\r\nimport ExampleVideoCover from '../../../files/ExampleVideoCover.jpg'\r\n\r\n\r\nconst CastingInfo = () => {\r\n    const [isOpenMoreInfo, setIsOpenMoreInfo] = useState(false);\r\n    const [modalVideoInstuctionIsOpen, setModalVideoInstuctionIsOpen] = useState(false)\r\n    const [exampleVideoIsOpen, setExampleVideoIsOpen] = useState(false)\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const toggleMoreInfo = () => setIsOpenMoreInfo(!isOpenMoreInfo)\r\n\r\n    const toggleVideoInstructionModal = () =>\r\n        setModalVideoInstuctionIsOpen(!modalVideoInstuctionIsOpen)\r\n    const toggleExampleVideoModal = () =>\r\n        setExampleVideoIsOpen(!exampleVideoIsOpen)\r\n\r\n    return (\r\n        <div className=\"befree-container\">\r\n            <h2 className=\"befree-title\">\r\n                {t('casting.title') + ' '}\r\n                <span className=\"befree-title-blue\">\r\n                    {t('casting.title.blue')}\r\n                </span>\r\n            </h2>\r\n\r\n            <p className=\"befree-text-casting\" style={{ textAlign: 'center', marginTop: '-5px' }}>\r\n                {t(\"casting.header.text.title.1\")}\r\n            </p>\r\n            <h1 className=\"befree-title-blue\" style={{ fontWeight: '400' }}>\r\n                {t(\"casting.header.title.2\")}\r\n            </h1>\r\n            <p className=\"befree-text-casting\" style={{ textAlign: 'center', marginTop: '-5px' }}>\r\n                {t(\"casting.header.text.title.2\")}\r\n            </p>\r\n            <h2 className=\"befree-title\">\r\n                <span className=\"befree-title-blue\">\r\n                    {t(\"table.side.title\")}\r\n                </span>\r\n            </h2>\r\n            <h2 className=\"befree-title\" style={{ color: '#6A8C8E', marginTop: '0px', letterSpacing: '0' }}>\r\n                {t(\"table.side.dates\")}\r\n            </h2>\r\n            <p className=\"befree-text-casting\" style={{ textAlign: 'center', marginTop: '-10px' }}>\r\n                {t(\"table.side.text\")}\r\n            </p>\r\n\r\n            <div className=\"dashboard__table\">\r\n                <div className=\"table-item\">\r\n                    <div className=\"table-title\">{t(\"table.one.title\")}</div>\r\n                    <p>\r\n                        {t(\"table.one.text.1\")} \r\n                        <span style={{ fontWeight: '900' }} className=\"befree-title-blue\"> {t(\"table.one.title.blue\")} </span> \r\n                        {t(\"table.one.text.2\")}\r\n                    </p>\r\n                    <p style={{ marginTop: '0' }}>\r\n                        {t(\"table.one.text.3\")}\r\n                    </p>\r\n                    <p style={{ marginTop: '0' }}>\r\n                        {t(\"table.one.text.4\")}\r\n                    </p>\r\n                </div>\r\n                <div className=\"table-item\">\r\n                    <div className=\"table-title\">{t(\"table.two.title\")}</div>\r\n                    <p>\r\n                        <div style={{ fontWeight: '900', marginBottom: '10px' }} className=\"befree-title-blue\">\r\n                            {t(\"table.two.text.1\")}\r\n                        </div>\r\n                        {t(\"table.two.text.2\")}\r\n                        <span style={{ fontWeight: '900' }} className=\"befree-title-blue\">\r\n                            {t(\"table.two.text.3\")}\r\n                        </span>\r\n                        {t(\"table.two.text.4\")}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\r\n                isOpenMoreInfo\r\n                    ? \"casting_moreInfo casting_moreInfo-visible\"\r\n                    : \"casting_moreInfo\"}\r\n            >\r\n                <div style={{ marginTop: '60px' }} className={\"casting_moreInfo_item\"}>\r\n                    <p className={\"casting_moreInfo_title\"}> {t(\"casting.steps.title\")} </p>\r\n                    <p>\r\n                        <span className=\"befree-title-blue\">{t(\"casting.steps.nums.one\")}</span>\r\n                        {t(\"casting.steps.text.1\")}\r\n                    </p>\r\n                    <p>\r\n                        <span className=\"befree-title-blue\">{t(\"casting.steps.nums.two\")}</span>\r\n                        {t(\"casting.steps.text.3\")}\r\n                    </p>\r\n                </div>\r\n                <div style={{ marginTop: '60px' }} className={\"casting_moreInfo_item\"}>\r\n                    <p className={\"casting_moreInfo_title\"}> {t('casting.moreInfo.videoReq.title')} </p>\r\n                    <p>{t('casting.moreInfo.videoReq.one')} </p>\r\n                    <p>{t('casting.moreInfo.videoReq.two')} </p>\r\n                    <p>{t(\"casting.moreInfo.videoReq.three\")} </p>\r\n                </div>\r\n\r\n                <Button title={t(\"casting.moreInfo.showVideoInstruction\")} onClick={toggleVideoInstructionModal} />\r\n                <Modal\r\n                    closeModal={toggleVideoInstructionModal}\r\n                    show={modalVideoInstuctionIsOpen}\r\n                    title={\"Instruction\"}\r\n                >\r\n                    <VideoJs\r\n                        videoURL={InstructionVideo}\r\n                        image={InstructionVideoCover}\r\n                    />\r\n                </Modal>\r\n\r\n                <div className={\"casting_moreInfo_item\"}>\r\n                    <p className={\"casting_moreInfo_title\"}> {t('casting.moreInfo.videoContent.title')} </p>\r\n                    <p> {t('casting.moreInfo.videoContent.one')} </p>\r\n                    <p> {t('casting.moreInfo.videoContent.two')} </p>\r\n                    <p> {t('casting.moreInfo.videoContent.three')} </p>\r\n                    <p> {t('casting.moreInfo.videoContent.four')} </p>\r\n                    <p> {t('casting.moreInfo.videoContent.five')} </p>\r\n                </div>\r\n\r\n                <Button\r\n                    title={t(\"casting.moreInfo.showExampleVideo\")}\r\n                    onClick={toggleExampleVideoModal}\r\n                />\r\n                <Modal\r\n                    closeModal={toggleExampleVideoModal}\r\n                    show={exampleVideoIsOpen}\r\n                    title={\"Example\"}\r\n                >\r\n                    <VideoJs\r\n                        videoURL={ExampleVideo}\r\n                        image={ExampleVideoCover}\r\n                    />\r\n                </Modal>\r\n\r\n                <div className={\"casting_moreInfo_item\"}>\r\n                    <p className={\"casting_moreInfo_title\"}> {t(\"casting.moreInfo.conditions.title\")} </p>\r\n                    <ul>\r\n                        <li>{t('casting.moreInfo.conditions.1')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.2')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.3')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.4')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.5')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.6')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.7')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.8')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.9')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.10')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.11')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.12')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.13')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.14')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.15')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.16')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.17')}</li>\r\n                        <li>{t('casting.moreInfo.conditions.18')}</li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <NavLink to=\"/faq\">\r\n                    <Button title={t(\"casting.moreInfo.faq\")} />\r\n                </NavLink>\r\n            </div>\r\n\r\n            <p style={{ textTransform: 'uppercase', marginTop: '50px', marginBottom: '0' }} className={\"casting_more-info\"} onClick={toggleMoreInfo}>\r\n                <span> {isOpenMoreInfo ? 'HIDE' : t('casting.moreInfo.text')} </span>\r\n                <ArrowDownIcon\r\n                    style={isOpenMoreInfo\r\n                        ? { marginLeft: '10px', transform: 'rotate(180deg)' }\r\n                        : { marginLeft: '10px' }\r\n                    } />\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastingInfo\r\n","import React from 'react'\r\nimport Modal from \"./Modal\";\r\n\r\nconst TermsComponent = ({onToggleTermsModal, termsModalIsOpen}) => {\r\n    return (\r\n        <Modal\r\n            closeModal={onToggleTermsModal}\r\n            show={termsModalIsOpen}\r\n            title=\"Terms of agreement\"\r\n        >\r\n            <div className=\"terms_content\">\r\n                <p className=\"terms_title\">1.Gathering information</p>\r\n                <div className=\"terms_text\">\r\n                    We collect information when you fill out a feedback form on the site. The information\r\n                    may include your full name, email address, telephone number, location.\r\n                    In addition, it is possible to automatically register your IP, browser, software,\r\n                    hardware data and other functions.\r\n                    By sending a message through the feedback form, you agree to the privacy policy and\r\n                    authorize us to collect and store your data.\r\n                </div>\r\n                <p className=\"terms_title\">2. Use of information</p>\r\n                <div className=\"terms_text\">\r\n                    The information we collect from you may be used to:\r\n                    Provide services tailored to your individual needs\r\n                    Offer personalized ads\r\n                    Improve our website\r\n                    Contact you by email\r\n                    Arrange a promotion, competition or research\r\n                </div>\r\n                <p className=\"terms_title\">3. Protection of personal data</p>\r\n                <div className=\"terms_text\">\r\n                    We are the sole owner of the information collected on this site.\r\n                    Your personal data will not be sold or in any way transferred to third parties for any\r\n                    reason,\r\n                    except for the necessary data to complete a request or transaction, for example, when\r\n                    sending an order.\r\n                </div>\r\n                <p className=\"terms_title\">4. Disclosure of information to third parties</p>\r\n                <div className=\"terms_text\">\r\n                    We do not sell, exchange or transfer personal data to third parties. This does not apply\r\n                    to trusted companies that help us operate the site and conduct business, provided that\r\n                    they agree to keep the information confidential.\r\n                    We are ready to share information in order to prevent crimes or help in their\r\n                    investigation when it comes to suspicion of fraud, actions that physically threaten the\r\n                    safety of people, violations of the rules of use, or in cases where it is provided by\r\n                    law.\r\n                    Non-confidential information may be provided to other companies for marketing,\r\n                    advertising, etc.\r\n                </div>\r\n                <p className=\"terms_title\">5. Protection of information and use of cookies</p>\r\n                <div className=\"terms_text\">\r\n                    Information protection is carried out by means of the company-provider of the website\r\n                    constructor and hosting services.\r\n                    From our side, only those employees who are directly related to the processing of\r\n                    requests and support of the site have access to personal data without the right to\r\n                    misuse and disclose it.\r\n                    Our cookies are used to improve site access and to identify repeat visits.\r\n                    In addition, they allow you to track the most interesting queries. Cookies are not\r\n                </div>\r\n                <p className=\"terms_title\">6. Unsubscribe</p>\r\n                <div className=\"terms_text\">\r\n                    We use email to provide you with information on your applications, company news, etc.\r\n                    If you wish to unsubscribe, each email contains detailed instructions on how you can do\r\n                    this.\r\n                </div>\r\n                <p className=\"terms_title\">7. Consent</p>\r\n                <div className=\"terms_text\">\r\n                    By leaving your data on our website, you automatically agree to our privacy policy.\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default TermsComponent;","import React, { useEffect, useState, useRef } from 'react'\r\nimport Input from \"../input/Input\";\r\nimport PhoneField from \"../phone/PhoneInput\";\r\nimport LongInput from \"../long-input/Long-input\";\r\nimport Spinner from \"../../../components/spinner/Spinner\";\r\nimport Button from \"../button/Button\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHttp } from \"../../../hooks/hook.http\";\r\nimport TermsComponent from './terms-component';\r\nimport { validateEmail } from '../../../utils/validate-utils';\r\nimport phone from 'phone'\r\nimport { useErrors } from '../../../hooks/errors-hook';\r\n\r\nimport './casting-form.scss'\r\nimport '../../../components/be-free/components/casting/Casting.scss'\r\nimport '../../../components/be-free/Be-free.scss'\r\nimport '../../../components/be-free/components/join/JoinTheTeam.scss'\r\nimport './casting-textArea.scss'\r\n\r\nconst CastingForm = ({ setDone }) => {\r\n    const [form, setForm] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        repeat: '',\r\n        about: '',\r\n        surname: '',\r\n        repeat: '',\r\n        ln: '',\r\n        upload: ''\r\n    })\r\n    const [canSend, setCanSend] = useState(false)\r\n    const [isAgree, setIsAgree] = useState(false)\r\n    const [termsModalIsOpen, setTermsModalIsOpen] = useState(false)\r\n\r\n    const { t } = useTranslation()\r\n\r\n    const { request, loading } = useHttp()\r\n    const {\r\n        arrayOfErrors,\r\n        clearErrors,\r\n        onSetError,\r\n        onSetErrorsFromRequest,\r\n        getErrorFieldByName\r\n    } = useErrors()\r\n\r\n    useEffect(() => {\r\n        const { name, email, phone, video1, video2, about, surname } = form\r\n        if (\r\n            name.trim().length &&\r\n            email.trim().length &&\r\n            phone.length &&\r\n            video1.trim().length &&\r\n            video2.trim().length &&\r\n            about.trim().length > 10 &&\r\n            surname.trim().length &&\r\n            isAgree\r\n        ) {\r\n            setCanSend(true)\r\n        } else {\r\n            setCanSend(false)\r\n        }\r\n    }, [form, isAgree])\r\n\r\n    useEffect(() => {\r\n        return () => clearErrors()\r\n    }, [])\r\n\r\n    const onToggleTermsModal = () => setTermsModalIsOpen(!termsModalIsOpen)\r\n\r\n    const sendForm = async () => {\r\n        try {\r\n            clearErrors()\r\n            if (phone(form.phone, '').length > 0) {\r\n                if (validateEmail(form.email)) {\r\n                    const formData = new FormData()\r\n                    formData.append('name', form.name)\r\n                    formData.append('surname', form.surname)\r\n                    formData.append('email', form.email)\r\n                    formData.append('phone', form.phone)\r\n                    formData.append('video1', form.video1)\r\n                    formData.append('video2', form.video2)\r\n                    formData.append('about', form.about)\r\n                    const response = await request(\r\n                        '/api/casting/new',\r\n                        'POST',\r\n                        formData\r\n                    )\r\n                    if (response.status) {\r\n                        clearErrors()\r\n                        setDone(true)\r\n                        setTimeout(() => setDone(false), 3000)\r\n                    }\r\n                } else {\r\n                    onSetError('email', 'Email is not valid!')\r\n                }\r\n            } else {\r\n                onSetError('phone', 'Phone is not valid!')\r\n            }\r\n        } catch (err) {\r\n            const resErrors = err.response.data.errors\r\n            onSetErrorsFromRequest(resErrors)\r\n        }\r\n    }\r\n\r\n    const toggleIsAgree = () => setIsAgree(!isAgree)\r\n\r\n    const changeHandler = e => setForm({ ...form, [e.target.name]: e.target.value })\r\n\r\n    const phoneChange = value => setForm({ ...form, phone: value })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"error_wrapper\">\r\n                {arrayOfErrors.map((error, idx) =>\r\n                    <p key={idx} className=\"input_error error_visible\">{error}</p>\r\n                )}\r\n            </div>\r\n            <div className=\"casting_form-wrapper\">\r\n                <TermsComponent\r\n                    termsModalIsOpen={termsModalIsOpen}\r\n                    onToggleTermsModal={onToggleTermsModal}\r\n                />\r\n                <div className=\"befree-col casting__c-1\">\r\n                <div className=\"blur-panel\">\r\n                <div>SOON</div>\r\n            </div>\r\n                    <Input\r\n                        tooltip={t('casting.tooltip.name')}\r\n                        value={form.name}\r\n                        error={getErrorFieldByName('name')}\r\n                        name=\"name\"\r\n                        placeholder={t('name')}\r\n                        changeHandler={changeHandler}\r\n                    />\r\n                    <Input\r\n                        tooltip={t('casting.tooltip.email')}\r\n                        value={form.email}\r\n                        error={getErrorFieldByName('email')}\r\n                        name=\"email\"\r\n                        placeholder={t('email')}\r\n                        changeHandler={changeHandler}\r\n                    />\r\n                    <PhoneField\r\n                        placeholder={t('phone')}\r\n                        changeHandler={phoneChange}\r\n                        phoneValue={form.phone}\r\n                    />\r\n                </div>\r\n                <div className=\"befree-col casting__c-2\">\r\n                    <LongInput\r\n                        tooltip={t('casting.tooltip.surname')}\r\n                        value={form.surname}\r\n                        error={getErrorFieldByName('surname')}\r\n                        name=\"surname\"\r\n                        placeholder={t('surname')}\r\n                        changeHandler={changeHandler}\r\n                    />\r\n                    <LongInput\r\n                        tooltip={t(\"repeat.email\")}\r\n                        value={form.repeat}\r\n                        error={getErrorFieldByName('repeat')}\r\n                        name=\"repeat\"\r\n                        placeholder={t(\"repeat.email\")}\r\n                        changeHandler={changeHandler}\r\n                    />\r\n                    <LongInput\r\n                        tooltip={t(\"language.in.video\")}\r\n                        value={form.ln}\r\n                        error={getErrorFieldByName('ln')}\r\n                        name=\"ln\"\r\n                        placeholder={t(\"language.in.video\")}\r\n                        changeHandler={changeHandler}\r\n                    />\r\n                    {/* <div className=\"field_wrapper\">\r\n                        <label htmlFor={`input_${form.about}`} className={\r\n                            form.about?.trim().length <= 0\r\n                                ? \"field_placeholder visible\"\r\n                                : \"field_placeholder\"\r\n                        }\r\n                        >{t('transmittalLater')}</label>\r\n                        <textarea\r\n                            onChange={changeHandler}\r\n                            className={\r\n                                getErrorFieldByName('about')\r\n                                    ? \"long-input-casting input-error\"\r\n                                    : \"long-input-casting\"\r\n                            }\r\n                            name=\"about\"\r\n                            type=\"text\"\r\n                        />\r\n                    </div> */}\r\n                    <LongInput\r\n                        tooltip={t(\"upload.video\")}\r\n                        value={form.ln}\r\n                        error={getErrorFieldByName('upload')}\r\n                        name=\"upload\"\r\n                        placeholder={t(\"upload.video\")}\r\n                        changeHandler={changeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div style={{ width: '70%', marginTop: '20px', marginBottom: '14px' }}>\r\n                {t('casting.page.end')}\r\n            </div>\r\n            <div className=\"casting_terms\">\r\n                <input type=\"checkbox\" className=\"custom-checkbox\" id=\"accept\" />\r\n                <label onClick={toggleIsAgree} htmlFor=\"accept\"> {t('casting.checkbox')} </label>\r\n                <p\r\n                    onClick={onToggleTermsModal}\r\n                    className=\"casting_terms-modal-button\"\r\n                >\r\n                    Terms of agreement\r\n                </p>\r\n            </div>\r\n            {loading\r\n                ? <Spinner />\r\n                : <Button\r\n                    onClick={sendForm}\r\n                    disabled={!canSend}\r\n                    title={t('send')}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CastingForm\r\n"],"sourceRoot":""}